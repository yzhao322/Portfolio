{"ast":null,"code":"var _jsxFileName = \"/Users/yanzhao/react-employer-viewer/src/App.js\";\nimport React, { Component } from \"react\";\nimport EmployeeCard from \"./components/EmployeeCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Sorting from \"./components/Sorting\";\nimport employees from \"./employee.json\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      employees\n    };\n\n    this.removeFriend = id => {\n      // Filter this.state.friends for friends with an id not equal to the id being removed\n      const employees = this.state.employees.filter(employees => employees.id !== id); // Set this.state.friends equal to the new friends array\n\n      this.setState({\n        employees\n      });\n    };\n\n    this.submit = event => {\n      console.log(event.target.value);\n\n      function propComparator(prop) {\n        return (a, b) => {\n          if (a.prop < b.prop) {\n            return -1;\n          }\n\n          if (a.prop > b.prop) {\n            return 1;\n          }\n\n          return 0;\n        };\n      }\n\n      const employees = this.state.employees.sort(propComparator(event.target.value)); // return this.state.employees.sort((a, b) => {\n      //   if (a.prop < b.prop) {\n      //     return -1;\n      //   }\n      //   if (a.prop > b.prop) {\n      //     return 1;\n      //   }\n      //   return 0;\n      // })\n\n      this.setState({\n        employees\n      });\n    };\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return /*#__PURE__*/React.createElement(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, \"Employee Profiles\"), /*#__PURE__*/React.createElement(Sorting, {\n      submit: this.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }), this.state.employees.map(employees => /*#__PURE__*/React.createElement(EmployeeCard, {\n      key: employees.id,\n      id: employees.id,\n      name: employees.name,\n      age: employees.age,\n      occupation: employees.occupation,\n      employee_file_number: employees.employee_file_number,\n      office: employees.office,\n      email: employees.email,\n      phone_number: employees.phone_number,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/yanzhao/react-employer-viewer/src/App.js"],"names":["React","Component","EmployeeCard","Wrapper","Title","Sorting","employees","App","state","removeFriend","id","filter","setState","submit","event","console","log","target","value","propComparator","prop","a","b","sort","render","map","name","age","occupation","employee_file_number","office","email","phone_number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;AAGA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BO,KAF0B,GAElB;AACNF,MAAAA;AADM,KAFkB;;AAAA,SAM1BG,YAN0B,GAMXC,EAAE,IAAI;AACnB;AACA,YAAMJ,SAAS,GAAG,KAAKE,KAAL,CAAWF,SAAX,CAAqBK,MAArB,CAA4BL,SAAS,IAAIA,SAAS,CAACI,EAAV,KAAiBA,EAA1D,CAAlB,CAFmB,CAGnB;;AACA,WAAKE,QAAL,CAAc;AAAEN,QAAAA;AAAF,OAAd;AACD,KAXyB;;AAAA,SAY1BO,MAZ0B,GAYhBC,KAAD,IAAW;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;;AAEA,eAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B,eAAO,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACf,cAAID,CAAC,CAACD,IAAF,GAASE,CAAC,CAACF,IAAf,EAAqB;AACnB,mBAAO,CAAC,CAAR;AACD;;AACD,cAAIC,CAAC,CAACD,IAAF,GAASE,CAAC,CAACF,IAAf,EAAqB;AACnB,mBAAO,CAAP;AACD;;AACD,iBAAO,CAAP;AACD,SARD;AASD;;AACD,YAAMd,SAAS,GAAG,KAAKE,KAAL,CAAWF,SAAX,CAAqBiB,IAArB,CAA0BJ,cAAc,CAACL,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAxC,CAAlB,CAdkB,CAgBlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAKN,QAAL,CAAc;AAAEN,QAAAA;AAAF,OAAd;AACD,KAvCyB;AAAA;;AA0C1B;AACAkB,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE,oBAAC,OAAD;AACE,MAAA,MAAM,EAAE,KAAKX,MADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAKG,KAAKL,KAAL,CAAWF,SAAX,CAAqBmB,GAArB,CAAyBnB,SAAS,iBACjC,oBAAC,YAAD;AACE,MAAA,GAAG,EAAEA,SAAS,CAACI,EADjB;AAEE,MAAA,EAAE,EAAEJ,SAAS,CAACI,EAFhB;AAGE,MAAA,IAAI,EAAEJ,SAAS,CAACoB,IAHlB;AAIE,MAAA,GAAG,EAAEpB,SAAS,CAACqB,GAJjB;AAKE,MAAA,UAAU,EAAErB,SAAS,CAACsB,UALxB;AAME,MAAA,oBAAoB,EAAEtB,SAAS,CAACuB,oBANlC;AAOE,MAAA,MAAM,EAAEvB,SAAS,CAACwB,MAPpB;AAQE,MAAA,KAAK,EAAExB,SAAS,CAACyB,KARnB;AASE,MAAA,YAAY,EAAEzB,SAAS,CAAC0B,YAT1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CALH,CADF;AAqBD;;AAjEyB;;AAoE5B,eAAezB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport EmployeeCard from \"./components/EmployeeCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Sorting from \"./components/Sorting\";\nimport employees from \"./employee.json\";\n\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    employees\n  };\n\n  removeFriend = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const employees = this.state.employees.filter(employees => employees.id !== id);\n    // Set this.state.friends equal to the new friends array\n    this.setState({ employees });\n  };\n  submit = (event) => {\n    console.log(event.target.value);\n\n    function propComparator(prop) {\n      return (a, b) => {\n        if (a.prop < b.prop) {\n          return -1;\n        }\n        if (a.prop > b.prop) {\n          return 1;\n        }\n        return 0;\n      }\n    }\n    const employees = this.state.employees.sort(propComparator(event.target.value));\n\n    // return this.state.employees.sort((a, b) => {\n    //   if (a.prop < b.prop) {\n    //     return -1;\n    //   }\n    //   if (a.prop > b.prop) {\n    //     return 1;\n    //   }\n    //   return 0;\n    // })\n\n    this.setState({ employees });\n  }\n\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Employee Profiles</Title>\n        <Sorting\n          submit={this.submit}\n        />\n        {this.state.employees.map(employees => (\n          <EmployeeCard\n            key={employees.id}\n            id={employees.id}\n            name={employees.name}\n            age={employees.age}\n            occupation={employees.occupation}\n            employee_file_number={employees.employee_file_number}\n            office={employees.office}\n            email={employees.email}\n            phone_number={employees.phone_number}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}