{"ast":null,"code":"var _jsxFileName = \"/Users/yanzhao/react-employer-viewer/src/App.js\";\nimport React, { Component } from \"react\";\nimport EmployeeCard from \"./components/EmployeeCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Sorting from \"./components/Sorting\";\nimport employees from \"./employee.json\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      employees\n    };\n\n    this.removeFriend = id => {\n      // Filter this.state.friends for friends with an id not equal to the id being removed\n      const employees = this.state.employees.filter(employees => employees.id !== id); // Set this.state.friends equal to the new friends array\n\n      this.setState({\n        employees\n      });\n    };\n\n    this.sortingByEmployeeFileNumber = () => {\n      let sortedEmployees = [...employees];\n      sortedEmployees.sort((a, b) => {\n        if (a.employee_file_number < b.employee_file_number) {\n          return -1;\n        } else if (a.employee_file_number > b.employee_file_number) {\n          return 1;\n        }\n\n        return 0;\n      });\n      this.setState({\n        sortedEmployees\n      });\n    };\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return /*#__PURE__*/React.createElement(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, \"Employee Profiles\"), /*#__PURE__*/React.createElement(Sorting, {\n      onClick: this.sortingByEmployeeFileNumber,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, \"Sorting by Employee File Number\"), this.state.employees.map(employees => /*#__PURE__*/React.createElement(EmployeeCard, {\n      key: employees.id,\n      id: employees.id,\n      name: employees.name,\n      occupation: employees.occupation,\n      employee_file_number: employees.employee_file_number,\n      office: employees.office,\n      email: employees.email,\n      phone_number: employees.phone_number,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/yanzhao/react-employer-viewer/src/App.js"],"names":["React","Component","EmployeeCard","Wrapper","Title","Sorting","employees","App","state","removeFriend","id","filter","setState","sortingByEmployeeFileNumber","sortedEmployees","sort","a","b","employee_file_number","render","map","name","occupation","office","email","phone_number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;AAGA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BO,KAF0B,GAElB;AACNF,MAAAA;AADM,KAFkB;;AAAA,SAM1BG,YAN0B,GAMXC,EAAE,IAAI;AACnB;AACA,YAAMJ,SAAS,GAAG,KAAKE,KAAL,CAAWF,SAAX,CAAqBK,MAArB,CAA4BL,SAAS,IAAIA,SAAS,CAACI,EAAV,KAAiBA,EAA1D,CAAlB,CAFmB,CAGnB;;AACA,WAAKE,QAAL,CAAc;AAAEN,QAAAA;AAAF,OAAd;AACD,KAXyB;;AAAA,SAY1BO,2BAZ0B,GAYI,MAAM;AAClC,UAAIC,eAAe,GAAG,CAAC,GAAGR,SAAJ,CAAtB;AACAQ,MAAAA,eAAe,CAACC,IAAhB,CAAqB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC7B,YAAID,CAAC,CAACE,oBAAF,GAAyBD,CAAC,CAACC,oBAA/B,EAAqD;AACnD,iBAAO,CAAC,CAAR;AACD,SAFD,MAGK,IAAIF,CAAC,CAACE,oBAAF,GAAyBD,CAAC,CAACC,oBAA/B,EAAqD;AACxD,iBAAO,CAAP;AACD;;AACD,eAAO,CAAP;AACD,OARD;AASA,WAAKN,QAAL,CAAc;AAAEE,QAAAA;AAAF,OAAd;AACD,KAxByB;AAAA;;AA0B1B;AACAK,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE,oBAAC,OAAD;AACE,MAAA,OAAO,EAAE,KAAKN,2BADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAFF,EAIG,KAAKL,KAAL,CAAWF,SAAX,CAAqBc,GAArB,CAAyBd,SAAS,iBACjC,oBAAC,YAAD;AACE,MAAA,GAAG,EAAEA,SAAS,CAACI,EADjB;AAEE,MAAA,EAAE,EAAEJ,SAAS,CAACI,EAFhB;AAGE,MAAA,IAAI,EAAEJ,SAAS,CAACe,IAHlB;AAIE,MAAA,UAAU,EAAEf,SAAS,CAACgB,UAJxB;AAKE,MAAA,oBAAoB,EAAEhB,SAAS,CAACY,oBALlC;AAME,MAAA,MAAM,EAAEZ,SAAS,CAACiB,MANpB;AAOE,MAAA,KAAK,EAAEjB,SAAS,CAACkB,KAPnB;AAQE,MAAA,YAAY,EAAElB,SAAS,CAACmB,YAR1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAJH,CADF;AAmBD;;AA/CyB;;AAkD5B,eAAelB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport EmployeeCard from \"./components/EmployeeCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Sorting from \"./components/Sorting\";\nimport employees from \"./employee.json\";\n\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    employees\n  };\n\n  removeFriend = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const employees = this.state.employees.filter(employees => employees.id !== id);\n    // Set this.state.friends equal to the new friends array\n    this.setState({ employees });\n  };\n  sortingByEmployeeFileNumber = () => {\n    let sortedEmployees = [...employees];\n    sortedEmployees.sort((a, b) => {\n      if (a.employee_file_number < b.employee_file_number) {\n        return -1;\n      }\n      else if (a.employee_file_number > b.employee_file_number) {\n        return 1;\n      }\n      return 0;\n    })\n    this.setState({ sortedEmployees });\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Employee Profiles</Title>\n        <Sorting\n          onClick={this.sortingByEmployeeFileNumber}>Sorting by Employee File Number</Sorting>\n        {this.state.employees.map(employees => (\n          <EmployeeCard\n            key={employees.id}\n            id={employees.id}\n            name={employees.name}\n            occupation={employees.occupation}\n            employee_file_number={employees.employee_file_number}\n            office={employees.office}\n            email={employees.email}\n            phone_number={employees.phone_number}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}