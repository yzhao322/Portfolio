{"ast":null,"code":"var _jsxFileName = \"/Users/yanzhao/react-employer-viewer/src/App.js\";\nimport React, { Component } from \"react\";\nimport EmployeeCard from \"./components/EmployeeCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Sorting from \"./components/Sorting\";\nimport employees from \"./employee.json\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      employees\n    };\n\n    this.removeFriend = id => {\n      // Filter this.state.friends for friends with an id not equal to the id being removed\n      const employees = this.state.employees.filter(employees => employees.id !== id); // Set this.state.friends equal to the new friends array\n\n      this.setState({\n        employees\n      });\n    };\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return /*#__PURE__*/React.createElement(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, \"Employee Profiles\"), /*#__PURE__*/React.createElement(Sorting, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, \"Sorting by Employee File Number\"), this.state.employees.map(employees => /*#__PURE__*/React.createElement(EmployeeCard, {\n      id: employees.id,\n      name: employees.name,\n      occupation: employees.occupation,\n      employee_file_number: employees.employee_file_number,\n      office: employees.office,\n      email: employees.email,\n      phone_number: employees.phone_number,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/yanzhao/react-employer-viewer/src/App.js"],"names":["React","Component","EmployeeCard","Wrapper","Title","Sorting","employees","App","state","removeFriend","id","filter","setState","render","map","name","occupation","employee_file_number","office","email","phone_number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;AAGA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BO,KAF0B,GAElB;AACNF,MAAAA;AADM,KAFkB;;AAAA,SAM1BG,YAN0B,GAMXC,EAAE,IAAI;AACnB;AACA,YAAMJ,SAAS,GAAG,KAAKE,KAAL,CAAWF,SAAX,CAAqBK,MAArB,CAA4BL,SAAS,IAAIA,SAAS,CAACI,EAAV,KAAiBA,EAA1D,CAAlB,CAFmB,CAGnB;;AACA,WAAKE,QAAL,CAAc;AAAEN,QAAAA;AAAF,OAAd;AACD,KAXyB;AAAA;;AAa1B;AACAO,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAFF,EAGG,KAAKL,KAAL,CAAWF,SAAX,CAAqBQ,GAArB,CAAyBR,SAAS,iBACjC,oBAAC,YAAD;AACE,MAAA,EAAE,EAAEA,SAAS,CAACI,EADhB;AAEE,MAAA,IAAI,EAAEJ,SAAS,CAACS,IAFlB;AAGE,MAAA,UAAU,EAAET,SAAS,CAACU,UAHxB;AAIE,MAAA,oBAAoB,EAAEV,SAAS,CAACW,oBAJlC;AAKE,MAAA,MAAM,EAAEX,SAAS,CAACY,MALpB;AAME,MAAA,KAAK,EAAEZ,SAAS,CAACa,KANnB;AAOE,MAAA,YAAY,EAAEb,SAAS,CAACc,YAP1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAHH,CADF;AAiBD;;AAhCyB;;AAmC5B,eAAeb,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport EmployeeCard from \"./components/EmployeeCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Sorting from \"./components/Sorting\";\nimport employees from \"./employee.json\";\n\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    employees\n  };\n\n  removeFriend = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const employees = this.state.employees.filter(employees => employees.id !== id);\n    // Set this.state.friends equal to the new friends array\n    this.setState({ employees });\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Employee Profiles</Title>\n        <Sorting>Sorting by Employee File Number</Sorting>\n        {this.state.employees.map(employees => (\n          <EmployeeCard\n            id={employees.id}\n            name={employees.name}\n            occupation={employees.occupation}\n            employee_file_number={employees.employee_file_number}\n            office={employees.office}\n            email={employees.email}\n            phone_number={employees.phone_number}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}